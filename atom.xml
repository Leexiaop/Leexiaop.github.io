<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lee前端技术栈</title>
  
  <subtitle>Lee前端技术栈｜前端技术｜前端博客</subtitle>
  <link href="https://leexiaop.github.io/atom.xml" rel="self"/>
  
  <link href="https://leexiaop.github.io/"/>
  <updated>2022-02-18T07:10:39.497Z</updated>
  <id>https://leexiaop.github.io/</id>
  
  <author>
    <name>Lee</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript算法套路之二叉树的前、中、后序递归遍历</title>
    <link href="https://leexiaop.github.io/algorithm/44/"/>
    <id>https://leexiaop.github.io/algorithm/44/</id>
    <published>2022-02-18T06:23:50.000Z</published>
    <updated>2022-02-18T07:10:39.497Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Leetcode算法刷了那么多，是不是过了没多久就全忘记了，再遇到类似的题目，只能隐隐约约的记得曾经刷过，但依旧毫无思路。对，这是绝大多数人的通病，当然我也不例外，所以我潜心研究这到底是为什么，到底是为什么。终于找到了终结所在–光刷题，只是做了题，根本没有明白其内在原理，根</summary>
        
      
    
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/categories/algorithm/"/>
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript算法套路之二叉树理论基础</title>
    <link href="https://leexiaop.github.io/algorithm/45/"/>
    <id>https://leexiaop.github.io/algorithm/45/</id>
    <published>2022-02-17T12:08:19.000Z</published>
    <updated>2022-02-18T07:11:28.816Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;学习算法，数据结构必须了解。据说二叉树是在学习算法路上的第一道要突破的屏障。那么就来总结一下二叉的一些简单理论：&lt;/p&gt;
&lt;h3 id=&quot;二叉树的定义&quot;&gt;&lt;a href=&quot;#二叉树的定义&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/categories/algorithm/"/>
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Typescript--装饰器</title>
    <link href="https://leexiaop.github.io/ts/7/"/>
    <id>https://leexiaop.github.io/ts/7/</id>
    <published>2021-10-15T07:25:05.000Z</published>
    <updated>2021-10-15T10:09:35.903Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h6 id=&quot;装饰器定义&quot;&gt;&lt;a href=&quot;#装饰器定义&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="typescript" scheme="https://leexiaop.github.io/categories/typescript/"/>
    
    
    <category term="typescript" scheme="https://leexiaop.github.io/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>Typescript--模块和命名空间</title>
    <link href="https://leexiaop.github.io/ts/6/"/>
    <id>https://leexiaop.github.io/ts/6/</id>
    <published>2021-10-15T06:36:36.000Z</published>
    <updated>2021-10-15T07:20:14.098Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h6 id=&quot;模块的概念&quot;&gt;&lt;a href=&quot;#模块的概念&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="typescript" scheme="https://leexiaop.github.io/categories/typescript/"/>
    
    
    <category term="typescript" scheme="https://leexiaop.github.io/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>Typescript--泛型的使用</title>
    <link href="https://leexiaop.github.io/ts/5/"/>
    <id>https://leexiaop.github.io/ts/5/</id>
    <published>2021-10-14T09:00:40.000Z</published>
    <updated>2021-10-14T11:31:12.677Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h6 id=&quot;泛型的定义&quot;&gt;&lt;a href=&quot;#泛型的定义&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="typescript" scheme="https://leexiaop.github.io/categories/typescript/"/>
    
    
    <category term="typescript" scheme="https://leexiaop.github.io/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>leeCode算法--各位相加问题</title>
    <link href="https://leexiaop.github.io/algorithm/43/"/>
    <id>https://leexiaop.github.io/algorithm/43/</id>
    <published>2021-10-14T02:53:48.000Z</published>
    <updated>2021-10-14T03:06:49.352Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;题目：给定一个非负整数</summary>
        
      
    
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/categories/algorithm/"/>
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Typescript--接口的使用</title>
    <link href="https://leexiaop.github.io/ts/4/"/>
    <id>https://leexiaop.github.io/ts/4/</id>
    <published>2021-10-12T11:30:27.000Z</published>
    <updated>2021-10-14T08:48:00.233Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h6 id=&quot;接口的定义&quot;&gt;&lt;a href=&quot;#接口的定义&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="typescript" scheme="https://leexiaop.github.io/categories/typescript/"/>
    
    
    <category term="typescript" scheme="https://leexiaop.github.io/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>Typescript--类的使用</title>
    <link href="https://leexiaop.github.io/ts/3/"/>
    <id>https://leexiaop.github.io/ts/3/</id>
    <published>2021-09-26T06:56:46.000Z</published>
    <updated>2021-10-12T11:27:33.869Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h6 id=&quot;类的定义&quot;&gt;&lt;a href=&quot;#类的定义&quot; class=&quot;headerlink&quot; title=&quot;类的定义&quot;&gt;&lt;/a&gt;类的定义&lt;/h6&gt;&lt;p&gt;在ts中类的定义是通过class来定义的。&lt;/p&gt;
&lt;figure class=&quot;highlight</summary>
        
      
    
    
    
    <category term="typescript" scheme="https://leexiaop.github.io/categories/typescript/"/>
    
    
    <category term="typescript" scheme="https://leexiaop.github.io/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>Typescript--函数方法</title>
    <link href="https://leexiaop.github.io/ts/2/"/>
    <id>https://leexiaop.github.io/ts/2/</id>
    <published>2021-09-26T01:50:46.000Z</published>
    <updated>2021-10-10T13:31:34.717Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h6 id=&quot;函数的定义方式&quot;&gt;&lt;a href=&quot;#函数的定义方式&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="typescript" scheme="https://leexiaop.github.io/categories/typescript/"/>
    
    
    <category term="typescript" scheme="https://leexiaop.github.io/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>Typescript--数据类型</title>
    <link href="https://leexiaop.github.io/ts/1/"/>
    <id>https://leexiaop.github.io/ts/1/</id>
    <published>2021-09-24T06:28:55.000Z</published>
    <updated>2021-10-10T13:31:34.717Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Typescript是Javascript的超集，所以大多数的数据类型和Javascript相同。下面是Typescript的数据类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;字符串类型(String)&lt;/li&gt;
&lt;li&gt;数字类型(Number)&lt;/li&gt;
&lt;li&gt;布尔类型(Boole</summary>
        
      
    
    
    
    <category term="typescript" scheme="https://leexiaop.github.io/categories/typescript/"/>
    
    
    <category term="typescript" scheme="https://leexiaop.github.io/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>leeCode算法--删除链表中的重复项</title>
    <link href="https://leexiaop.github.io/algorithm/42/"/>
    <id>https://leexiaop.github.io/algorithm/42/</id>
    <published>2021-08-05T06:14:02.000Z</published>
    <updated>2021-10-10T13:31:34.697Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;题目：存在一个按升序排列的链表，给你这个链表的头节点 head ，请你删除所有重复的元素，使每个元素 只出现一次</summary>
        
      
    
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/categories/algorithm/"/>
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>leeCode算法--求一个数的平方根</title>
    <link href="https://leexiaop.github.io/algorithm/41/"/>
    <id>https://leexiaop.github.io/algorithm/41/</id>
    <published>2021-08-04T02:40:18.000Z</published>
    <updated>2021-10-10T13:31:34.696Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;题目：实现一个函数sqrt(x)，计算并返回x的平方根，其中x为非负整数，由于返回的类型为整数，结果只保留整数部分，小数部分将被舍去。&lt;/p&gt;
&lt;figure class=&quot;highlight excel&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
        
      
    
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/categories/algorithm/"/>
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>leeCode算法--爬楼梯问题</title>
    <link href="https://leexiaop.github.io/algorithm/40/"/>
    <id>https://leexiaop.github.io/algorithm/40/</id>
    <published>2021-08-03T02:40:22.000Z</published>
    <updated>2021-10-10T13:31:34.696Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;题目：假设你正在爬楼梯，需要n阶才能到达楼顶，每次你可以爬1或2个台阶，你有多少种不同爬到楼顶的方法？注：给定n是一个正整数。&lt;/p&gt;
&lt;p&gt;分析：我们看下具体的解法：&lt;br&gt;0开始：     1种 –&amp;gt; 1&lt;br&gt;1第一节楼梯：1种 –&amp;gt;</summary>
        
      
    
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/categories/algorithm/"/>
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>leeCode算法--斐波那契数列的实现及优化</title>
    <link href="https://leexiaop.github.io/algorithm/39/"/>
    <id>https://leexiaop.github.io/algorithm/39/</id>
    <published>2021-08-02T06:38:37.000Z</published>
    <updated>2021-10-10T13:31:34.693Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;题目：写一个函数，输入n,求斐波那契数列的第n项，即F(n)斐波那契数列的定义如下，F(0) = 0, F(1) = 1, F(n) = F(n - 1) + F(n - 2)(n&amp;gt;1), 既：</summary>
        
      
    
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/categories/algorithm/"/>
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>leeCode算法--计算加1问题</title>
    <link href="https://leexiaop.github.io/algorithm/38/"/>
    <id>https://leexiaop.github.io/algorithm/38/</id>
    <published>2021-08-02T03:32:40.000Z</published>
    <updated>2021-10-10T13:31:34.693Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;题目：给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。你可以假设除了整数 0</summary>
        
      
    
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/categories/algorithm/"/>
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>leeCode算法--实现最小栈操作</title>
    <link href="https://leexiaop.github.io/algorithm/37/"/>
    <id>https://leexiaop.github.io/algorithm/37/</id>
    <published>2021-07-28T06:21:20.000Z</published>
    <updated>2021-10-10T13:31:34.693Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;题目：设计一个支持 push，pop，top操作，并能在常数时间内检索到最小元素的栈。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;push(x) —— 将元素 x 推入栈中。&lt;/li&gt;
&lt;li&gt;pop() —— 删除栈顶的元素。&lt;/li&gt;
&lt;li&gt;top() ——</summary>
        
      
    
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/categories/algorithm/"/>
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>leeCode算法--杨辉三角(II)</title>
    <link href="https://leexiaop.github.io/algorithm/36/"/>
    <id>https://leexiaop.github.io/algorithm/36/</id>
    <published>2021-07-27T02:29:21.000Z</published>
    <updated>2021-10-10T13:31:34.693Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;题目：给定一个非负索引 rowIndex，返回「杨辉三角」的第 rowIndex 行。在「杨辉三角」中，每个数是它左上方和右上方的数的和。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/algorithm/36/../35/1.gif&quot;</summary>
        
      
    
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/categories/algorithm/"/>
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript--关于Promise该了解些什么</title>
    <link href="https://leexiaop.github.io/javascript/10/"/>
    <id>https://leexiaop.github.io/javascript/10/</id>
    <published>2021-07-26T09:23:00.000Z</published>
    <updated>2021-10-10T13:31:34.713Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Promise是解决异步编程的解决方案，比传统的回调解决方案，要更加强大合理。所谓Promise,其实就是一个容器，保存在未来才会结束的事件。从语法上讲，Promise是一个对象。他有俩个特点：&lt;br&gt;（1）Promise的状态不受外界影响，Promise是一个异步操作，有</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://leexiaop.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://leexiaop.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript--关于Set, WeakSet, Map, WeakMap的不同</title>
    <link href="https://leexiaop.github.io/javascript/9/"/>
    <id>https://leexiaop.github.io/javascript/9/</id>
    <published>2021-07-26T07:11:22.000Z</published>
    <updated>2021-10-10T13:31:34.714Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Set, WeakSet, Map, WeakMap都是ES2015提供的新的数据结构。&lt;/p&gt;
&lt;h3 id=&quot;Set结构&quot;&gt;&lt;a href=&quot;#Set结构&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://leexiaop.github.io/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://leexiaop.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>leeCode算法--杨辉三角(I)</title>
    <link href="https://leexiaop.github.io/algorithm/35/"/>
    <id>https://leexiaop.github.io/algorithm/35/</id>
    <published>2021-07-26T02:32:43.000Z</published>
    <updated>2021-10-10T13:31:34.693Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;题目： 给定一个非负整数 numRows，生成「杨辉三角」的前 numRows 行。在「杨辉三角」中，每个数是它左上方和右上方的数的和。&lt;br&gt;&lt;img src=&quot;/algorithm/35/1.gif&quot;</summary>
        
      
    
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/categories/algorithm/"/>
    
    
    <category term="algorithm" scheme="https://leexiaop.github.io/tags/algorithm/"/>
    
  </entry>
  
</feed>
